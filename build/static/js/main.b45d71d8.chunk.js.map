{"version":3,"sources":["App.js","index.js"],"names":["App","useState","selected","setSelected","startScan","setStartScan","loadingScan","setLoadingScan","data","setData","handleScan","scanData","console","log","className","onClick","onChange","e","target","value","facingMode","delay","onError","err","error","onScan","style","width","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sOA+DeA,EAzDH,WACV,MAAgCC,mBAAS,eAAc,mBAAhDC,EAAQ,KAAEC,EAAW,KAC5B,EAAkCF,oBAAS,GAAM,mBAA1CG,EAAS,KAAEC,EAAY,KAC9B,EAAsCJ,oBAAS,GAAM,mBAA9CK,EAAW,KAAEC,EAAc,KAClC,EAAwBN,mBAAS,IAAG,mBAA7BO,EAAI,KAAEC,EAAO,KAEdC,EAAU,iDAAG,WAAOC,GAAQ,2EAChCJ,GAAe,GACfK,QAAQC,IAAI,mBAAoBF,GAC5BA,GAAyB,KAAbA,IACdC,QAAQC,IAAI,aAAcF,GAC1BF,EAAQE,GACRN,GAAa,GACbE,GAAe,IAEhB,2CACF,gBAVe,sCAchB,OACE,sBAAKO,UAAU,MAAK,UAClB,mDACA,4CAEGZ,KAGH,wBACEa,QAAS,WACPV,GAAcD,EAChB,EAAE,SAEDA,EAAY,YAAc,eAE5BA,GACC,qCACE,yBAAQY,SAAU,SAACC,GAAC,OAAKd,EAAYc,EAAEC,OAAOC,MAAM,EAAC,UACnD,wBAAQA,MAAO,cAAc,yBAC7B,wBAAQA,MAAO,OAAO,6BAExB,cAAC,IAAQ,CACPC,WAAYlB,EACZmB,MAAO,IACPC,QA3BU,SAACC,GACnBX,QAAQY,MAAMD,EAChB,EA0BUE,OAAQf,EAERgB,MAAO,CAAEC,MAAO,cAIrBrB,GAAe,wCACN,KAATE,GAAe,4BAAIA,MAG1B,ECxDMoB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAU,UACT,cAAC,EAAG,MAENJ,E","file":"static/js/main.b45d71d8.chunk.js","sourcesContent":["// versi \"react-qr-reader\" 1.0.0. component API harus disesuaikan dengan yg baru\n\nimport \"./styles.css\";\nimport { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\n\nconst App = () => {\n  const [selected, setSelected] = useState(\"environment\");\n  const [startScan, setStartScan] = useState(false);\n  const [loadingScan, setLoadingScan] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const handleScan = async (scanData) => {\n    setLoadingScan(true);\n    console.log(`loaded data data`, scanData);\n    if (scanData && scanData !== \"\") {\n      console.log(`loaded >>>`, scanData);\n      setData(scanData);\n      setStartScan(false);\n      setLoadingScan(false);\n      // setPrecScan(scanData);\n    }\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <h2>\n        Last Scan:\n        {selected}\n      </h2>\n\n      <button\n        onClick={() => {\n          setStartScan(!startScan);\n        }}\n      >\n        {startScan ? \"Stop Scan\" : \"Start Scan\"}\n      </button>\n      {startScan && (\n        <>\n          <select onChange={(e) => setSelected(e.target.value)}>\n            <option value={\"environment\"}>Back Camera</option>\n            <option value={\"user\"}>Front Camera</option>\n          </select>\n          <QrReader\n            facingMode={selected}\n            delay={1000}\n            onError={handleError}\n            onScan={handleScan}\n            // chooseDeviceId={()=>selected}\n            style={{ width: \"300px\" }}\n          />\n        </>\n      )}\n      {loadingScan && <p>Loading</p>}\n      {data !== \"\" && <p>{data}</p>}\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}